{"version":3,"sources":["webpack://orderedGrid/webpack/universalModuleDefinition","webpack://orderedGrid/webpack/bootstrap","webpack://orderedGrid/./src/utils.js","webpack://orderedGrid/./src/index.js","webpack://orderedGrid/./src/cellOrder.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getGridData","columns","rows","vertHalf","horHalf","centerCells","Math","floor","ceil","snakeIndexes","chunk","Array","from","_","map","arr","reverse","reduce","result","concat","_toConsumableArray","getSnakeOrder","spiralIndexes","matrix","row","index","length","shift","transpose","spiral","getSpiralOrder","column","columnIndex","resultColumnIndex","rowIndex","array","size","resIndex","slice","getGrid","_ref","width","height","_ref$dimensions","dimensions","_ref$mode","_dimensions","src_slicedToArray","data","boundGetOrder","col","_centerCells","_slicedToArray","vert","hor","abs","dvert","min","dhor","max","indexOf","h","w","x","y","order"],"mappings":"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","file":"ordered-grid.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"orderedGrid\"] = factory();\n\telse\n\t\troot[\"orderedGrid\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function getGridData(columns, rows) {\r\n    const vertHalf = (rows - 1) / 2;\r\n    const horHalf = (columns - 1) / 2;\r\n\r\n    let centerCells;\r\n    if (columns % 2) {\r\n        if (rows % 2) {\r\n            centerCells = [[vertHalf, vertHalf], [horHalf, horHalf]];\r\n        } else {\r\n            centerCells = [[Math.floor(vertHalf), Math.ceil(vertHalf)], [horHalf, horHalf]];\r\n        }\r\n    } else {\r\n        if (rows % 2) {\r\n            centerCells = [[vertHalf, vertHalf], [Math.floor(horHalf), Math.ceil(horHalf)]];\r\n        } else {\r\n            centerCells = [[Math.floor(vertHalf), Math.ceil(vertHalf)], [Math.floor(horHalf), Math.ceil(horHalf)]];\r\n        }\r\n    }\r\n    const snakeIndexes = getSnakeOrder(columns, rows);\r\n    const spiralIndexes = getSpiralOrder(columns, rows);\r\n    return {vertHalf, horHalf, centerCells, snakeIndexes, spiralIndexes};\r\n}\r\n\r\nfunction spiral(matrix, columns, rows) {\r\n    let row, index = 0;\r\n    const result = new Array(columns * rows);\r\n\r\n    while (matrix.length) {\r\n        row = matrix.shift();\r\n        while (row.length) {\r\n            result[index++] = row.shift();\r\n        }\r\n        matrix = transpose(matrix);\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction transpose(matrix) {\r\n    const column = matrix[0];\r\n    if (!column) return matrix;\r\n    const columns = column.length;\r\n    const rows = matrix.length;\r\n    const result = new Array(columns);\r\n    let columnIndex;\r\n    let resultColumnIndex;\r\n    let rowIndex;\r\n    for (resultColumnIndex = 0, columnIndex = columns - 1; columnIndex >= 0; columnIndex--, resultColumnIndex++) {\r\n        result[resultColumnIndex] = new Array(rows);\r\n        for (rowIndex = 0; rowIndex < rows; rowIndex++) {\r\n            result[resultColumnIndex][rowIndex] = matrix[rowIndex][columnIndex];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction chunk(array, size) {\r\n\r\n    const length = array == null ? 0 : array.length;\r\n    if (!length || size < 1) {\r\n        return [];\r\n    }\r\n    let index = 0,\r\n        resIndex = 0,\r\n        result = Array(Math.ceil(length / size));\r\n\r\n    while (index < length) {\r\n        result[resIndex++] = array.slice(index, (index += size));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getSnakeOrder(columns, rows) {\r\n    const base = Array.from(Array(columns * rows), (_, i) => i);\r\n    const matrix = chunk(base, columns);\r\n    const bbf = matrix.map((arr, i) => i % 2 ? arr.reverse() : arr);\r\n    return bbf.reduce((result, arr) => [...result, ...arr], [])\r\n}\r\n\r\nfunction getSpiralOrder(columns, rows) {\r\n    const base = Array.from(Array(columns * rows), (_, i) => i);\r\n    const matrix = chunk(base, columns);\r\n    return spiral(matrix, columns, rows);\r\n}","import getCellOrder from './cellOrder';\r\nimport getGridData from './utils';\r\n\r\nexport function getGrid({width, height, dimensions = [1, 1], mode = 0}) {\r\n    const [columns, rows] = dimensions;\r\n    if (!columns || !rows) return [];\r\n\r\n    const data = getGridData(columns, rows);\r\n    const boundGetOrder = getCellOrder.bind(null, data);\r\n    const h = Math.ceil(height / rows);\r\n    const w = Math.ceil(width / columns);\r\n    return Array.from(Array(columns * rows), getBounds);\r\n\r\n    function getBounds(_, i) {\r\n        const x = i % columns * w;\r\n        const y = Math.floor(i / columns) * h;\r\n        const column = i % columns;\r\n        const row = Math.floor(i / columns);\r\n        const order = boundGetOrder(column, row, i, mode);\r\n\r\n        return {x, y, w, h, column, row, order};\r\n    }\r\n}\r\n\r\n\r\n","export default function getCellOrder(data, col, row, index, mode) {\r\n\r\n    const {vertHalf, horHalf, centerCells, snakeIndexes, spiralIndexes} = data;\r\n    const [vert, hor] = centerCells;\r\n\r\n    if (mode === 0) {\r\n        return index;\r\n    } else if (mode === 1) { // columns\r\n        return col;\r\n    } else if (mode === 2) { // rows\r\n        return row;\r\n    } else if (mode === 3) { // stripes vert.\r\n        return col % 2;\r\n    } else if (mode === 4) { // stripes hor.\r\n        return row % 2;\r\n    } else if (mode === 5) { // checkerboard\r\n        if (row % 2) {\r\n            return col % 2 ? col % 2 - 1 : col % 2 + 1;\r\n        }\r\n        return col % 2;\r\n    } else if (mode === 6) { // from center to top/bottom\r\n        return Math.floor(Math.abs(vertHalf - row));\r\n    } else if (mode === 7) { // from center to left/right\r\n        return Math.floor(Math.abs(horHalf - col));\r\n    } else if (mode === 8) { // from center\r\n        const dvert = Math.min(Math.abs(vert[0] - row), Math.abs(vert[1] - row));\r\n        const dhor = Math.min(Math.abs(hor[0] - col), Math.abs(hor[1] - col));\r\n        return Math.max(dvert, dhor);\r\n    } else if (mode === 9) { // snake\r\n        return snakeIndexes[index];\r\n    } else if (mode === 10) { // spiral\r\n        return spiralIndexes.indexOf(index);\r\n    }\r\n\r\n}"],"sourceRoot":""}